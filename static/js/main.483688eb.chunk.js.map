{"version":3,"sources":["features/usersProfile/services/usersProfile.js","features/usersProfile/actions/types.js","features/usersProfile/actions/usersProfile.js","features/usersProfile/constants/labels.js","features/usersProfile/components/UserProfile.js","features/usersProfile/components/InputSearch.js","features/usersProfile/containers/UsersProfile.js","constants/labels.js","components/Header.js","App.js","features/usersProfile/reducers/usersProfile.js","store.js","index.js"],"names":["getUsers","axios","create","baseURL","getUsersProfile","a","get","resp","SET_USERS_PROFILE","DELETE_USER_PROFILE","SET_IS_LOADING_USERS_PROFILE","SET_ERROR_USERS_PROFILE","CLEAR_ERROR_USERS_PROFILE","CLEAR_ALL_USERS_PROFILE","setUsersProfile","users","type","labels","NAVBAR","TITLE","USERS_PROFILE","MSG","INPUT_SEARCH","BUTTONS","DELETE","CLEAN_SEARCH","UserProfile","user","handleDeleteUserProfile","picture","name","email","phone","dob","location","Col","sm","md","lg","Card","className","Img","variant","src","large","Body","Title","first","last","Text","age","country","Row","xs","Button","onClick","InputSearch","searchUser","setSearchUser","Jumbotron","Form","Control","size","placeholder","onChange","e","target","value","disabled","UsersProfile","state","dispatch","isLoadingUsersProfile","errorUsersProfile","useState","initData","response","isCancel","data","status","results","customResults","map","index","idKey","login","username","userToDelete","userData","usersAfterDelete","filter","deleteUserProfileThunk","useEffect","renderUsersList","length","filterUsers","toLowerCase","includes","Container","Spinner","animation","connect","usersProfile","memo","TITULO","INICIO","SECCION","CATEGORIAS","CATEGORIA_1","CATEGORIA_2","CATEGORIA_3","OTROS","INICIAR_SESION","Header","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","eventKey","App","combineReducers","action","rootReducer","middlewares","thunk","store","createStore","compose","applyMiddleware","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.483688eb.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getUsers = axios.create({\n    baseURL: `https://randomuser.me/api`\n});\n\nconst getUsersProfile = async () => {\n    const resp = await getUsers.get('/?results=15');\n    return resp;\n}\n\nconst deleteUser = async (user) => {\n    const {Â id } = user;\n    const resp = await getUsers.delete(`/${id.value}`);\n    return resp;\n}\n\nexport {\n    getUsersProfile,\n    deleteUser,\n};","const SET_USERS_PROFILE = 'SET_USERS_PROFILE';\nconst DELETE_USER_PROFILE = 'DELETE_USER_PROFILE';\nconst SET_IS_LOADING_USERS_PROFILE = 'SET_IS_LOADING_USERS_PROFILE';\nconst SET_ERROR_USERS_PROFILE = 'SET_ERROR_USERS_PROFILE';\nconst CLEAR_ERROR_USERS_PROFILE = 'CLEAR_ERROR_USERS_PROFILE';\nconst CLEAR_ALL_USERS_PROFILE = 'CLEAR_ALL_USERS_PROFILE';\n\nexport {\n    SET_USERS_PROFILE,\n    DELETE_USER_PROFILE,\n    SET_IS_LOADING_USERS_PROFILE,\n    SET_ERROR_USERS_PROFILE,\n    CLEAR_ERROR_USERS_PROFILE,\n    CLEAR_ALL_USERS_PROFILE,\n};\n","import {\n    getUsersProfile,\n    deleteUser,\n} from '../services/usersProfile';\nimport {\n    SET_USERS_PROFILE,\n    DELETE_USER_PROFILE,\n    SET_IS_LOADING_USERS_PROFILE,\n    SET_ERROR_USERS_PROFILE,\n    CLEAR_ERROR_USERS_PROFILE,\n    CLEAR_ALL_USERS_PROFILE,\n} from './types';\n\nconst setUsersProfile = users => ({\n    type: SET_USERS_PROFILE,\n    users,\n});\n\nconst deleteUserProfile = user => ({\n    type: DELETE_USER_PROFILE,\n    user,\n});\n\nconst setIsLoadingUsersProfile = isLoadingUsersProfile => ({\n    type: SET_IS_LOADING_USERS_PROFILE,\n    isLoadingUsersProfile,\n});\n\nconst setErrorUsersProfile = errorUsersProfile => ({\n    type: SET_ERROR_USERS_PROFILE,\n    errorUsersProfile,\n});\n\nconst clearErrorUsersProfile = () => ({\n    type: CLEAR_ERROR_USERS_PROFILE,\n});\n\nconst clearAllUsersProfile = () => ({\n    type: CLEAR_ALL_USERS_PROFILE,\n});\n\n/**\n * Obtiene usuarios\n */\nconst getUsersProfileThunk = () => async (dispatch) => {\n    const response = await getUsersProfile();\n    const {\n        isCancel,\n        data,\n    } = response;\n    if (response.status === 200) {\n        const { results } = data;\n        // se agrega idKey por que algunos id.value de los usuarios viene null\n        const customResults = results.map((user, index) => ({ ...user, idKey: `${index}-${user.login.username}` }) )\n        dispatch(setUsersProfile(customResults));\n    } else {\n        dispatch(setErrorUsersProfile(true));\n    }\n    dispatch(setIsLoadingUsersProfile(false));\n    return isCancel;\n};\n\n/**\n * TODO:\n * Eliminar usuario\n */\nconst deleteUserProfileThunk = (userData, users) => async (dispatch) => {\n    /* TODO: \n     * eliminar dato desde la API\n     * controlar respuesta al eliminar\n    const response = await deleteUser(userData);\n    */\n   const { idKey } = userData;\n   const usersAfterDelete = users.filter(user => user.idKey !== idKey);\n   dispatch(setUsersProfile(usersAfterDelete));\n};\n\n\nexport {\n    setUsersProfile,\n    setIsLoadingUsersProfile,\n    setErrorUsersProfile,\n    clearErrorUsersProfile,\n    clearAllUsersProfile,\n    deleteUserProfile,\n\n    getUsersProfileThunk,\n    deleteUserProfileThunk,\n};\n","const labels = {\n    NAVBAR: {\n        TITLE: 'Perfiles de usuario',\n    },\n    USERS_PROFILE: {\n        TITLE: 'Perfiles de usuarios',\n        MSG: 'Puedes realizar una bÃºsqueda a continuaciÃ³n',\n        INPUT_SEARCH: 'Buscar usuarios',\n    },\n    BUTTONS: {\n        DELETE: 'Eliminar',\n        CLEAN_SEARCH: 'Limpiar bÃºsqueda'\n    }\n};\n\nexport default labels;\n","import React from 'react'\nimport {\n\tCol,\n\tCard,\n\tButton,\n    Row,\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport labels from '../constants/labels';\n\nconst UserProfile = ({\n    user,\n    handleDeleteUserProfile,\n}) => {\n    const {\n        picture,\n        name,\n        email,\n        phone,\n        dob,\n        location,\n    } = user;\n    return (\n        <Col sm={6} md={4} lg={3}>\n            <Card className=\"mb-4\">\n                <Card.Img variant=\"top\" src={picture.large} />\n                <Card.Body>\n                    <Card.Title>{`${name.first} ${name.last}`}</Card.Title>\n                    <Card.Text>{`Edad: ${dob.age}`}</Card.Text>\n                    <Card.Text>{`Email: ${email}`}</Card.Text>\n                    <Card.Text>{`Tel: ${phone}`}</Card.Text>\n                    <Card.Text className=\"mb-4\">{`PaÃ­s: ${location.country}`}</Card.Text>\n                    <Row>\n                        <Col xs=\"auto\">\n                            <Button\n                                variant=\"danger\"\n                                onClick={handleDeleteUserProfile(user)}\n                            >\n                                {labels.BUTTONS.DELETE}\n                            </Button>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n}\n\nexport default UserProfile;\n","import {\n    Button,\n    Form,\n    Jumbotron,\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport labels from '../constants/labels';\n\nconst InputSearch = ({\n    searchUser,\n    setSearchUser,\n}) => {\n\n    return (\n        <Jumbotron>\n            <h1>{labels.USERS_PROFILE.TITLE}</h1>\n            <p>{labels.USERS_PROFILE.MSG}</p>\n            <Form.Control\n                size=\"lg\"\n                type=\"text\"\n                placeholder={labels.USERS_PROFILE.INPUT_SEARCH}\n                onChange={e => setSearchUser(e.target.value)}\n                className=\"mb-4\"\n                value={searchUser}\n            />\n            <Button\n                variant=\"success\"\n                disabled={!searchUser}\n                onClick={() => setSearchUser('')}\n            >\n                {labels.BUTTONS.CLEAN_SEARCH}\n            </Button>\n        </Jumbotron>\n    );\n};\n\nexport default InputSearch;\n","import { memo, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    getUsersProfileThunk,\n    deleteUserProfileThunk,\n} from '../actions/usersProfile';\nimport UserProfile from '../components/UserProfile';\nimport InputSearch from '../components/InputSearch';\nimport {\n\tContainer,\n\tRow,\n    Spinner,\n    Alert,\n    Button,\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport const mapStateToProps = (state) => {\n    const {\n        usersProfile:Â {\n            users,\n            isLoadingUsersProfile,\n            errorUsersProfile,\n        },\n    } = state;\n    return {\n        state,\n        users,\n        isLoadingUsersProfile,\n        errorUsersProfile,\n    };\n};\n\nconst UsersProfile = ({\n    state,\n    dispatch,\n    users,\n    isLoadingUsersProfile,\n    errorUsersProfile,\n}) => {\n    const [searchUser, setSearchUser] = useState('');\n\n    const initData = () => {\n        dispatch(getUsersProfileThunk());\n    }\n\n    const filteredUsers = () => {\n        if (users.length && searchUser) {\n            const userFilter = users.filter(user => {\n                return user.name.first.toLowerCase().includes( searchUser.toLowerCase() );\n            })\n            return userFilter;\n        }\n        return users;\n    };\n\n    const handleDeleteUserProfile = (userToDelete) => () => {\n        dispatch(deleteUserProfileThunk(userToDelete, users));\n    };\n\n\tuseEffect(() => {\n        initData();\n    }, []);\n\n    const renderFormSearch = () => {\n        return (\n            <InputSearch\n                searchUser={searchUser}\n                setSearchUser={setSearchUser}\n            />\n        );\n    };\n\n    const renderUsersList = () => {\n        if (users?.length) {\n            const filterUsers = filteredUsers();\n            return (\n                <Row>\n                    {\n                        filterUsers.map((user, index) => {\n                            return (\n                                <UserProfile\n                                    user={user}\n                                    key={index}\n                                    handleDeleteUserProfile={handleDeleteUserProfile}\n                                />)\n                        })\n                    }\n                </Row>\n            );\n        }\n    };\n\n\tconst renderUsersProfile = () => {\n        /* TODO:\n         * controlar error al obtener datos\n        if (errorUsersProfile) {\n            <Container className=\"App-content\">\n                <Alert variant=\"danger\" onClose={() => initData()} dismissible>\n                    <Alert.Heading>Error al buscar datos</Alert.Heading>\n                    <p>\n                        Puede que los servicios esten presentando intermitencia. Por favor, intente nuevamente\n                    </p>\n                    <hr />\n                    <div className=\"d-flex justify-content-end\">\n                        <Button onClick={() => initData()} variant=\"success\">\n                            Reintentar\n                        </Button>\n                    </div>\n                </Alert>\n            </Container>\n        }\n        */\n        if (isLoadingUsersProfile) {\n            return (\n                <Container className=\"App-content\">\n                    <Spinner animation=\"border\" variant=\"primary\"/>\n                </Container>\n            );\n        }\n        return (\n            <Container className=\"mb-4\">\n                {renderFormSearch()}\n                {renderUsersList()}\n            </Container>\n        );\n    };\n\n    return renderUsersProfile();\n};\n\nexport default connect(mapStateToProps)(memo(UsersProfile));","const labels = {\n    NAVBAR: {\n        TITULO: 'Perfiles de usuario',\n        INICIO: 'Inicio',\n        SECCION: 'SecciÃ³n',\n        CATEGORIAS: 'CategorÃ­as',\n        CATEGORIA_1: 'CategorÃ­a 1',\n        CATEGORIA_2: 'CategorÃ­a 2',\n        CATEGORIA_3: 'CategorÃ­a 3',\n        OTROS: 'Otros',\n        INICIAR_SESION: 'Iniciar sesiÃ³n',\n    },\n};\n\nexport default labels;\n","import React from 'react'\nimport {\n    Navbar,\n    Container,\n    Nav,\n    NavDropdown,\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport labels from '../constants/labels';\n\nconst Header = () => {\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className=\"mb-4\" >\n            <Container>\n                <Navbar.Brand href=\"/\">{labels.NAVBAR.TITULO}</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/\">{labels.NAVBAR.INICIO}</Nav.Link>\n                        <Nav.Link href=\"#seccion\">{labels.NAVBAR.SECCION}</Nav.Link>\n                        <NavDropdown title={labels.NAVBAR.CATEGORIAS} id=\"collasible-nav-dropdown\">\n                            <NavDropdown.Item href=\"#categoria/3.1\">{labels.NAVBAR.CATEGORIA_1}</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#categoria/3.2\">{labels.NAVBAR.CATEGORIA_2}</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#categoria/3.3\">{labels.NAVBAR.CATEGORIA_3}</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#categoria/3.4\">{labels.NAVBAR.OTROS}</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Nav>\n                        <Nav.Link eventKey={2} href=\"#login\">\n                            {labels.NAVBAR.INICIAR_SESION}\n                        </Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default Header;\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport UsersProfile from './features/usersProfile/containers/UsersProfile';\nimport Header from './components/Header';\n\nconst App = () => (\n\t<div>\n\t\t<Header />\n\t\t<div>\n\t\t\t<UsersProfile />\n\t\t</div>\n\t</div>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport {\n    SET_USERS_PROFILE,\n    DELETE_USER_PROFILE,\n    SET_IS_LOADING_USERS_PROFILE,\n    SET_ERROR_USERS_PROFILE,\n    CLEAR_ERROR_USERS_PROFILE,\n    CLEAR_ALL_USERS_PROFILE,\n} from '../actions/types';\n\nconst usersProfileReducers = (state = null, action) => {\n    switch (action.type) {\n        case SET_USERS_PROFILE:\n            return action.users;\n        case DELETE_USER_PROFILE:\n            return null;\n        case CLEAR_ERROR_USERS_PROFILE:\n            return null;\n        case CLEAR_ALL_USERS_PROFILE:\n            return null;\n        default:\n            return state;\n    }\n};\n\nconst isLoadingUsersProfileReducers = (state = true, action) => {\n    switch (action.type) {\n        case SET_IS_LOADING_USERS_PROFILE:\n            return action.isLoadingUsersProfile;\n        case CLEAR_ALL_USERS_PROFILE:\n            return true;\n        default:\n            return state;\n    }\n};\n\nconst errorUsersProfileReducers = (state = false, action) => {\n    switch (action.type) {\n        case SET_ERROR_USERS_PROFILE:\n            return action.errorUsersProfile;\n        case CLEAR_ALL_USERS_PROFILE:\n            return false;\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    users: usersProfileReducers,\n    isLoadingUsersProfile: isLoadingUsersProfileReducers,\n    errorUsersProfile: errorUsersProfileReducers,\n});\n","import {\n    createStore,\n    applyMiddleware,\n    compose,\n    combineReducers,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport usersProfile from './features/usersProfile/reducers/usersProfile';\n\nconst rootReducer = combineReducers({\n    usersProfile,\n});\n\nconst middlewares = [thunk];\n\n/* Agrega middlewares */\nconst configureStore = () => createStore(\n    rootReducer,\n    compose(applyMiddleware(...middlewares)),\n);\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport configureStore from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}